{"version":3,"sources":["pages/home.js","components/customNav.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flex","minHeight","hi","color","palette","text","primary","intro","secondary","Home","classes","Grid","container","spacing","direction","justify","alignContent","className","item","Typography","component","variant","paragraph","border","main","borderRadius","breakpoints","down","height","up","flexDirection","width","marginRight","circleLogo","backgroundImage","backgroundSize","divider","borderRight","marginTop","marginBottom","borderBottom","marginLeft","CustomNav","React","useState","aboutIcon","setAboutIcon","projectsIcon","setProjectsIcon","learningIcon","setLearningIcon","contactIcon","setContactIcon","previous","setPrevious","handleClick","clicked","type","setPreviousIcon","preIcon","IconButton","aria-label","onClick","App","Container","this","props","maxWidth","CssBaseline","Component","withStyles","flexGrow","paddingRight","paddingLeft","display","alignItems","Boolean","window","location","hostname","match","createMuiTheme","light","dark","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fc0f140a.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flex: 1,\n    minHeight: \"80vh\",\n  },\n  hi: {\n    color: theme.palette.text.primary,\n  },\n  intro: {\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport const Home = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      direction=\"column\"\n      justify=\"center\"\n      alignContent=\"center\"\n      className={classes.root}\n    >\n      <Grid item>\n        <Typography className={classes.hi} component=\"h1\" variant=\"h1\">\n          Hi,\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Typography className={classes.intro} paragraph>\n          I'm Ghada, = )\n          <br />\n          <br />\n          On my way to be an amazing Frontend Web Developer.ðŸš€\n          <br />I like UI effects, animation, and bringing creative design to\n          life! âœ¨\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport PhotoFilterIcon from \"@material-ui/icons/PhotoFilter\";\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: `${theme.palette.primary.main} solid 1px`,\n    borderRadius: theme.spacing(10),\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"3em\",\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      flexDirection: \"column\",\n      height: \"20em\",\n      width: \"3em\",\n      marginRight: theme.spacing(5),\n    },\n  },\n  circleLogo: {\n    border: `${theme.palette.primary.main} solid 1px`,\n    borderRadius: theme.spacing(10),\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    backgroundImage: `url(\"./assets/Ghaa.png\")`,\n    backgroundSize: \"cover\",\n  },\n  // circleLogoLg: {\n  //   border: `${theme.palette.primary.main} solid 1px`,\n  //   width: theme.spacing(12),\n  //   height: theme.spacing(12),\n  //   position: \"absolute\",\n  //   // right: \"10vw\",\n  //   // top: \"8vh\",\n  //   [theme.breakpoints.up(\"sm\")]: {\n  //     top: \"8vh\",\n  //     //bottom: \"38vh\",\n  //     right: \"13vw\",\n  //   },\n  // },\n  divider: {\n    [theme.breakpoints.down(\"xs\")]: {\n      borderRight: `${theme.palette.primary.main} dotted 1px`,\n      marginTop: theme.spacing(1.5),\n      marginBottom: theme.spacing(1.5),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      borderBottom: `${theme.palette.primary.main} dotted 1px`,\n      marginRight: theme.spacing(1.5),\n      marginLeft: theme.spacing(1.5),\n    },\n  },\n}));\n\nexport const CustomNav = () => {\n  const classes = useStyles();\n  const [aboutIcon, setAboutIcon] = React.useState(\"default\");\n  const [projectsIcon, setProjectsIcon] = React.useState(\"default\");\n  const [learningIcon, setLearningIcon] = React.useState(\"default\");\n  const [contactIcon, setContactIcon] = React.useState(\"default\");\n  const [previous, setPrevious] = React.useState(\"home\");\n\n  const handleClick = (clicked, type) => {\n    switch (clicked) {\n      case \"about\":\n        setAboutIcon(type);\n        break;\n      case \"projects\":\n        setProjectsIcon(type);\n        break;\n      case \"learning\":\n        setLearningIcon(type);\n        break;\n      case \"contact\":\n        setContactIcon(type);\n        break;\n      default:\n        break;\n    }\n    type === \"primary\" && setPreviousIcon(clicked);\n  };\n\n  const setPreviousIcon = (clicked) => {\n    if (clicked === previous) {\n      return;\n    }\n    const preIcon = previous;\n    setPrevious(clicked);\n    handleClick(preIcon, \"default\");\n  };\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      className={classes.root}\n      alignContent=\"center\"\n      justify=\"space-between\"\n    >\n      <IconButton\n        aria-label=\"home\"\n        onClick={() => handleClick(\"home\", \"primary\")}\n      >\n        <div className={classes.circleLogo} />\n      </IconButton>\n\n      <span className={classes.divider} />\n\n      <IconButton\n        aria-label=\"about\"\n        onClick={() => handleClick(\"about\", \"primary\")}\n        color={aboutIcon}\n      >\n        <AssignmentIndIcon />\n      </IconButton>\n\n      <IconButton\n        aria-label=\"projects\"\n        onClick={() => handleClick(\"projects\", \"primary\")}\n        color={projectsIcon}\n      >\n        <PhotoFilterIcon />\n      </IconButton>\n\n      <IconButton\n        aria-label=\"learning\"\n        onClick={() => handleClick(\"learning\", \"primary\")}\n        color={learningIcon}\n      >\n        <AssignmentTurnedInIcon />\n      </IconButton>\n\n      <IconButton\n        aria-label=\"contact\"\n        onClick={() => handleClick(\"contact\", \"primary\")}\n        color={contactIcon}\n      >\n        <AlternateEmailIcon />\n      </IconButton>\n    </Grid>\n  );\n};\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Home } from \"./pages/home\";\nimport { CustomNav } from \"./components/customNav\";\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n  },\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <Container\n        component=\"main\"\n        className={this.props.classes.root}\n        maxWidth=\"md\"\n      >\n        <CssBaseline />\n        <Home />\n        <CustomNav />\n      </Container>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#ff9933\",\n      main: \"#ff8000\",\n      dark: \"#b25900\",\n    },\n    text: {\n      primary: \"#ff8000\",\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}